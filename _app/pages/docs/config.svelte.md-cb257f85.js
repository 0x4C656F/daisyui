import{S as Za,i as $a,s as es,e as a,t as l,k as r,c as s,a as o,h as n,d as t,m as i,b as D,g as A,H as e,L as ca}from"../../chunks/vendor-bfed1aed.js";function ts(Qa){let h,Re,V,Ae,je,qe,Fe,Oe,O,Va=`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>

  <span class="token comment">// add daisyUI plugin</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token comment">// daisyUI config (optional)</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">styled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">utils</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">logs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rtl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">darkTheme</span><span class="token operator">:</span> <span class="token string">"dark"</span><span class="token punctuation">,</span>
    <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,Le,j,We,He,c,y,X,Ye,Me,Z,$,ze,Ge,L,Je,Ke,Ne,Qe,k,ee,Ve,Xe,te,ae,Ze,$e,x,et,tt,at,q,st,ot,E,se,lt,nt,oe,le,rt,it,H,pt,T,ct,dt,ut,b,ne,ht,ft,re,ie,mt,yt,S,kt,U,Et,bt,vt,v,pe,_t,gt,ce,de,wt,It,ue,Ct,xt,_,he,Pt,Bt,fe,me,Dt,Ot,f,Lt,ye,Ht,Tt,St,Ut,R,Rt,At,jt,g,ke,qt,Ft,Ee,be,Wt,Yt,w,Mt,ve,zt,Gt,_e,Jt,Kt,Nt,m,ge,Qt,Vt,we,Ie,Xt,Zt,I,$t,Ce,ea,ta,xe,aa,sa,oa,C,la,Pe,na,ra,Be,ia,pa;return{c(){h=a("p"),Re=l("daisyUI can be configured from your "),V=a("code"),Ae=l("tailwind.config.js"),je=l(" file."),qe=a("br"),Fe=l(`
Default config:`),Oe=r(),O=a("pre"),Le=r(),j=a("h2"),We=l("Config values explained:"),He=r(),c=a("ul"),y=a("li"),X=a("h3"),Ye=l("styled"),Me=r(),Z=a("p"),$=a("code"),ze=l("Boolean (default: true)"),Ge=r(),L=a("p"),Je=l("If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),Ke=a("br"),Ne=l(`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Qe=r(),k=a("li"),ee=a("h3"),Ve=l("themes"),Xe=r(),te=a("p"),ae=a("code"),Ze=l("Boolean or array (default: true)"),$e=r(),x=a("p"),et=l(`If it\u2019s true, all themes will be included.
If it\u2019s false, only light (default) theme will be available.`),tt=a("br"),at=l(`
If it\u2019s an array, only themes in the array will be included and the first theme will be the default theme.
Read more about `),q=a("a"),st=l("themes"),ot=r(),E=a("li"),se=a("h3"),lt=l("base"),nt=r(),oe=a("p"),le=a("code"),rt=l("Boolean (default: true)"),it=r(),H=a("p"),pt=l("If it\u2019s true, "),T=a("a"),ct=l("a few base styles"),dt=l(" will be added"),ut=r(),b=a("li"),ne=a("h3"),ht=l("utils"),ft=r(),re=a("p"),ie=a("code"),mt=l("Boolean (default: true)"),yt=r(),S=a("p"),kt=l("If it\u2019s true, "),U=a("a"),Et=l("responsive and utility classes"),bt=l(" will be added"),vt=r(),v=a("li"),pe=a("h3"),_t=l("logs"),gt=r(),ce=a("p"),de=a("code"),wt=l("Boolean (default: true)"),It=r(),ue=a("p"),Ct=l("If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),xt=r(),_=a("li"),he=a("h3"),Pt=l("rtl"),Bt=r(),fe=a("p"),me=a("code"),Dt=l("Boolean (default: false)"),Ot=r(),f=a("p"),Lt=l("If it\u2019s true, your theme will be right-to-left. You need to add "),ye=a("code"),Ht=l('dir="rtl"'),Tt=l(" to your body tag."),St=a("br"),Ut=l(`
If you\u2019re using daisyUI with RTL option, I suggest using `),R=a("a"),Rt=l("tailwindcss-flip"),At=l(" plugin because to flip all your Tailwind utilities automatically."),jt=r(),g=a("li"),ke=a("h3"),qt=l("darkTheme"),Ft=r(),Ee=a("p"),be=a("code"),Wt=l('String (default: "dark")'),Yt=r(),w=a("p"),Mt=l("Allows us to pick another theme for system\u2019s auto dark mode. By default, "),ve=a("code"),zt=l("dark"),Gt=l(" theme (or a custom theme named "),_e=a("code"),Jt=l("dark"),Kt=l(") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),Nt=r(),m=a("li"),ge=a("h3"),Qt=l("prefix"),Vt=r(),we=a("p"),Ie=a("code"),Xt=l('String (default: "")'),Zt=r(),I=a("p"),$t=l("Adds a prefix to class name for all components and their associated utilities. For example: "),Ce=a("code"),ea=l("btn"),ta=l(" will become "),xe=a("code"),aa=l("prefix-btn"),sa=l("."),oa=r(),C=a("p"),la=l("Common words used for components such as "),Pe=a("code"),na=l("modal"),ra=l(" or "),Be=a("code"),ia=l("btn"),pa=l(" might create conflict with other styling systems (for example: bootstrap), or be picked up unintentionally by Tailwind extractor (thus creating unused css). This config will help in those cases."),this.h()},l(p){h=s(p,"P",{});var u=o(h);Re=n(u,"daisyUI can be configured from your "),V=s(u,"CODE",{});var da=o(V);Ae=n(da,"tailwind.config.js"),da.forEach(t),je=n(u," file."),qe=s(u,"BR",{}),Fe=n(u,`
Default config:`),u.forEach(t),Oe=i(p),O=s(p,"PRE",{class:!0});var Xa=o(O);Xa.forEach(t),Le=i(p),j=s(p,"H2",{});var ua=o(j);We=n(ua,"Config values explained:"),ua.forEach(t),He=i(p),c=s(p,"UL",{});var d=o(c);y=s(d,"LI",{});var F=o(y);X=s(F,"H3",{});var ha=o(X);Ye=n(ha,"styled"),ha.forEach(t),Me=i(F),Z=s(F,"P",{});var fa=o(Z);$=s(fa,"CODE",{});var ma=o($);ze=n(ma,"Boolean (default: true)"),ma.forEach(t),fa.forEach(t),Ge=i(F),L=s(F,"P",{});var Te=o(L);Je=n(Te,"If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),Ke=s(Te,"BR",{}),Ne=n(Te,`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Te.forEach(t),F.forEach(t),Qe=i(d),k=s(d,"LI",{});var W=o(k);ee=s(W,"H3",{});var ya=o(ee);Ve=n(ya,"themes"),ya.forEach(t),Xe=i(W),te=s(W,"P",{});var ka=o(te);ae=s(ka,"CODE",{});var Ea=o(ae);Ze=n(Ea,"Boolean or array (default: true)"),Ea.forEach(t),ka.forEach(t),$e=i(W),x=s(W,"P",{});var De=o(x);et=n(De,`If it\u2019s true, all themes will be included.
If it\u2019s false, only light (default) theme will be available.`),tt=s(De,"BR",{}),at=n(De,`
If it\u2019s an array, only themes in the array will be included and the first theme will be the default theme.
Read more about `),q=s(De,"A",{href:!0});var ba=o(q);st=n(ba,"themes"),ba.forEach(t),De.forEach(t),W.forEach(t),ot=i(d),E=s(d,"LI",{});var Y=o(E);se=s(Y,"H3",{});var va=o(se);lt=n(va,"base"),va.forEach(t),nt=i(Y),oe=s(Y,"P",{});var _a=o(oe);le=s(_a,"CODE",{});var ga=o(le);rt=n(ga,"Boolean (default: true)"),ga.forEach(t),_a.forEach(t),it=i(Y),H=s(Y,"P",{});var Se=o(H);pt=n(Se,"If it\u2019s true, "),T=s(Se,"A",{href:!0,rel:!0});var wa=o(T);ct=n(wa,"a few base styles"),wa.forEach(t),dt=n(Se," will be added"),Se.forEach(t),Y.forEach(t),ut=i(d),b=s(d,"LI",{});var M=o(b);ne=s(M,"H3",{});var Ia=o(ne);ht=n(Ia,"utils"),Ia.forEach(t),ft=i(M),re=s(M,"P",{});var Ca=o(re);ie=s(Ca,"CODE",{});var xa=o(ie);mt=n(xa,"Boolean (default: true)"),xa.forEach(t),Ca.forEach(t),yt=i(M),S=s(M,"P",{});var Ue=o(S);kt=n(Ue,"If it\u2019s true, "),U=s(Ue,"A",{href:!0,rel:!0});var Pa=o(U);Et=n(Pa,"responsive and utility classes"),Pa.forEach(t),bt=n(Ue," will be added"),Ue.forEach(t),M.forEach(t),vt=i(d),v=s(d,"LI",{});var z=o(v);pe=s(z,"H3",{});var Ba=o(pe);_t=n(Ba,"logs"),Ba.forEach(t),gt=i(z),ce=s(z,"P",{});var Da=o(ce);de=s(Da,"CODE",{});var Oa=o(de);wt=n(Oa,"Boolean (default: true)"),Oa.forEach(t),Da.forEach(t),It=i(z),ue=s(z,"P",{});var La=o(ue);Ct=n(La,"If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),La.forEach(t),z.forEach(t),xt=i(d),_=s(d,"LI",{});var G=o(_);he=s(G,"H3",{});var Ha=o(he);Pt=n(Ha,"rtl"),Ha.forEach(t),Bt=i(G),fe=s(G,"P",{});var Ta=o(fe);me=s(Ta,"CODE",{});var Sa=o(me);Dt=n(Sa,"Boolean (default: false)"),Sa.forEach(t),Ta.forEach(t),Ot=i(G),f=s(G,"P",{});var P=o(f);Lt=n(P,"If it\u2019s true, your theme will be right-to-left. You need to add "),ye=s(P,"CODE",{});var Ua=o(ye);Ht=n(Ua,'dir="rtl"'),Ua.forEach(t),Tt=n(P," to your body tag."),St=s(P,"BR",{}),Ut=n(P,`
If you\u2019re using daisyUI with RTL option, I suggest using `),R=s(P,"A",{href:!0,rel:!0});var Ra=o(R);Rt=n(Ra,"tailwindcss-flip"),Ra.forEach(t),At=n(P," plugin because to flip all your Tailwind utilities automatically."),P.forEach(t),G.forEach(t),jt=i(d),g=s(d,"LI",{});var J=o(g);ke=s(J,"H3",{});var Aa=o(ke);qt=n(Aa,"darkTheme"),Aa.forEach(t),Ft=i(J),Ee=s(J,"P",{});var ja=o(Ee);be=s(ja,"CODE",{});var qa=o(be);Wt=n(qa,'String (default: "dark")'),qa.forEach(t),ja.forEach(t),Yt=i(J),w=s(J,"P",{});var K=o(w);Mt=n(K,"Allows us to pick another theme for system\u2019s auto dark mode. By default, "),ve=s(K,"CODE",{});var Fa=o(ve);zt=n(Fa,"dark"),Fa.forEach(t),Gt=n(K," theme (or a custom theme named "),_e=s(K,"CODE",{});var Wa=o(_e);Jt=n(Wa,"dark"),Wa.forEach(t),Kt=n(K,") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),K.forEach(t),J.forEach(t),Nt=i(d),m=s(d,"LI",{});var B=o(m);ge=s(B,"H3",{});var Ya=o(ge);Qt=n(Ya,"prefix"),Ya.forEach(t),Vt=i(B),we=s(B,"P",{});var Ma=o(we);Ie=s(Ma,"CODE",{});var za=o(Ie);Xt=n(za,'String (default: "")'),za.forEach(t),Ma.forEach(t),Zt=i(B),I=s(B,"P",{});var N=o(I);$t=n(N,"Adds a prefix to class name for all components and their associated utilities. For example: "),Ce=s(N,"CODE",{});var Ga=o(Ce);ea=n(Ga,"btn"),Ga.forEach(t),ta=n(N," will become "),xe=s(N,"CODE",{});var Ja=o(xe);aa=n(Ja,"prefix-btn"),Ja.forEach(t),sa=n(N,"."),N.forEach(t),oa=i(B),C=s(B,"P",{});var Q=o(C);la=n(Q,"Common words used for components such as "),Pe=s(Q,"CODE",{});var Ka=o(Pe);na=n(Ka,"modal"),Ka.forEach(t),ra=n(Q," or "),Be=s(Q,"CODE",{});var Na=o(Be);ia=n(Na,"btn"),Na.forEach(t),pa=n(Q," might create conflict with other styling systems (for example: bootstrap), or be picked up unintentionally by Tailwind extractor (thus creating unused css). This config will help in those cases."),Q.forEach(t),B.forEach(t),d.forEach(t),this.h()},h(){D(O,"class","language-js"),D(q,"href","/docs/themes"),D(T,"href","https://github.com/saadeghi/daisyui/blob/master/src/base"),D(T,"rel","nofollow"),D(U,"href","https://github.com/saadeghi/daisyui/tree/master/src/utilities"),D(U,"rel","nofollow"),D(R,"href","https://github.com/cvrajeesh/tailwindcss-flip"),D(R,"rel","nofollow")},m(p,u){A(p,h,u),e(h,Re),e(h,V),e(V,Ae),e(h,je),e(h,qe),e(h,Fe),A(p,Oe,u),A(p,O,u),O.innerHTML=Va,A(p,Le,u),A(p,j,u),e(j,We),A(p,He,u),A(p,c,u),e(c,y),e(y,X),e(X,Ye),e(y,Me),e(y,Z),e(Z,$),e($,ze),e(y,Ge),e(y,L),e(L,Je),e(L,Ke),e(L,Ne),e(c,Qe),e(c,k),e(k,ee),e(ee,Ve),e(k,Xe),e(k,te),e(te,ae),e(ae,Ze),e(k,$e),e(k,x),e(x,et),e(x,tt),e(x,at),e(x,q),e(q,st),e(c,ot),e(c,E),e(E,se),e(se,lt),e(E,nt),e(E,oe),e(oe,le),e(le,rt),e(E,it),e(E,H),e(H,pt),e(H,T),e(T,ct),e(H,dt),e(c,ut),e(c,b),e(b,ne),e(ne,ht),e(b,ft),e(b,re),e(re,ie),e(ie,mt),e(b,yt),e(b,S),e(S,kt),e(S,U),e(U,Et),e(S,bt),e(c,vt),e(c,v),e(v,pe),e(pe,_t),e(v,gt),e(v,ce),e(ce,de),e(de,wt),e(v,It),e(v,ue),e(ue,Ct),e(c,xt),e(c,_),e(_,he),e(he,Pt),e(_,Bt),e(_,fe),e(fe,me),e(me,Dt),e(_,Ot),e(_,f),e(f,Lt),e(f,ye),e(ye,Ht),e(f,Tt),e(f,St),e(f,Ut),e(f,R),e(R,Rt),e(f,At),e(c,jt),e(c,g),e(g,ke),e(ke,qt),e(g,Ft),e(g,Ee),e(Ee,be),e(be,Wt),e(g,Yt),e(g,w),e(w,Mt),e(w,ve),e(ve,zt),e(w,Gt),e(w,_e),e(_e,Jt),e(w,Kt),e(c,Nt),e(c,m),e(m,ge),e(ge,Qt),e(m,Vt),e(m,we),e(we,Ie),e(Ie,Xt),e(m,Zt),e(m,I),e(I,$t),e(I,Ce),e(Ce,ea),e(I,ta),e(I,xe),e(xe,aa),e(I,sa),e(m,oa),e(m,C),e(C,la),e(C,Pe),e(Pe,na),e(C,ra),e(C,Be),e(Be,ia),e(C,pa)},p:ca,i:ca,o:ca,d(p){p&&t(h),p&&t(Oe),p&&t(O),p&&t(Le),p&&t(j),p&&t(He),p&&t(c)}}}const ss={title:"Config",desc:"How to change the default configuration of daisyUI?",published:!0};class os extends Za{constructor(h){super();$a(this,h,null,ts,es,{})}}export{os as default,ss as metadata};
