import{S as ma,i as ka,s as va,e as a,t as o,k as i,c as s,a as l,h as n,d as t,m as p,b as B,g as R,H as e,M as St}from"../../chunks/vendor-1b9fe476.js";function ba(ha){let h,we,F,Ie,Be,Ce,Pe,ke,C,fa=`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>

  <span class="token comment">// add daisyUI plugin</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token comment">// daisyUI config (optional)</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">styled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">utils</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">logs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rtl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">darkTheme</span><span class="token operator">:</span> <span class="token string">"dark"</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,ve,x,De,be,d,y,G,He,Le,J,K,Oe,Ue,P,Re,xe,Se,Te,m,N,Ae,je,Q,V,qe,Me,w,We,Ye,ze,S,Fe,Ge,k,X,Je,Ke,Z,$,Ne,Qe,D,Ve,H,Xe,Ze,$e,v,ee,et,tt,te,ae,at,st,L,lt,O,ot,nt,rt,b,se,it,pt,le,oe,dt,ct,ne,ut,ht,E,re,ft,yt,ie,pe,mt,kt,f,vt,de,bt,Et,_t,gt,U,wt,It,Bt,_,ce,Ct,Pt,ue,he,Dt,Ht,g,Lt,fe,Ot,Ut,ye,Rt,xt;return{c(){h=a("p"),we=o("daisyUI can be configured from your "),F=a("code"),Ie=o("tailwind.config.js"),Be=o(" file."),Ce=a("br"),Pe=o(`
Default config:`),ke=i(),C=a("pre"),ve=i(),x=a("h2"),De=o("Config values explained:"),be=i(),d=a("ul"),y=a("li"),G=a("h3"),He=o("styled"),Le=i(),J=a("p"),K=a("code"),Oe=o("Boolean (default: true)"),Ue=i(),P=a("p"),Re=o("If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),xe=a("br"),Se=o(`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Te=i(),m=a("li"),N=a("h3"),Ae=o("themes"),je=i(),Q=a("p"),V=a("code"),qe=o("Boolean or array (default: true)"),Me=i(),w=a("p"),We=o(`If it\u2019s true, all themes will be included.
If it\u2019s false, only light (default) theme will be available.`),Ye=a("br"),ze=o(`
If it\u2019s an array, only themes in the array will be included and the first theme will be the default theme.
Read more about `),S=a("a"),Fe=o("themes"),Ge=i(),k=a("li"),X=a("h3"),Je=o("base"),Ke=i(),Z=a("p"),$=a("code"),Ne=o("Boolean (default: true)"),Qe=i(),D=a("p"),Ve=o("If it\u2019s true, "),H=a("a"),Xe=o("a few base styles"),Ze=o(" will be added"),$e=i(),v=a("li"),ee=a("h3"),et=o("utils"),tt=i(),te=a("p"),ae=a("code"),at=o("Boolean (default: true)"),st=i(),L=a("p"),lt=o("If it\u2019s true, "),O=a("a"),ot=o("responsive and utility classes"),nt=o(" will be added"),rt=i(),b=a("li"),se=a("h3"),it=o("logs"),pt=i(),le=a("p"),oe=a("code"),dt=o("Boolean (default: true)"),ct=i(),ne=a("p"),ut=o("If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),ht=i(),E=a("li"),re=a("h3"),ft=o("rtl"),yt=i(),ie=a("p"),pe=a("code"),mt=o("Boolean (default: false)"),kt=i(),f=a("p"),vt=o("If it\u2019s true, your theme will be right-to-left. You need to add "),de=a("code"),bt=o('dir="rtl"'),Et=o(" to your body tag."),_t=a("br"),gt=o(`
If you\u2019re using daisyUI with RTL option, I suggest using `),U=a("a"),wt=o("tailwindcss-flip"),It=o(" plugin because to flip all your Tailwind utilities automatically."),Bt=i(),_=a("li"),ce=a("h3"),Ct=o("darkTheme"),Pt=i(),ue=a("p"),he=a("code"),Dt=o('String (default: "dark")'),Ht=i(),g=a("p"),Lt=o("Allows us to pick another theme for system\u2019s auto dark mode. By default, "),fe=a("code"),Ot=o("dark"),Ut=o(" theme (or a custom theme named "),ye=a("code"),Rt=o("dark"),xt=o(") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),this.h()},l(r){h=s(r,"P",{});var c=l(h);we=n(c,"daisyUI can be configured from your "),F=s(c,"CODE",{});var Tt=l(F);Ie=n(Tt,"tailwind.config.js"),Tt.forEach(t),Be=n(c," file."),Ce=s(c,"BR",{}),Pe=n(c,`
Default config:`),c.forEach(t),ke=p(r),C=s(r,"PRE",{class:!0});var ya=l(C);ya.forEach(t),ve=p(r),x=s(r,"H2",{});var At=l(x);De=n(At,"Config values explained:"),At.forEach(t),be=p(r),d=s(r,"UL",{});var u=l(d);y=s(u,"LI",{});var T=l(y);G=s(T,"H3",{});var jt=l(G);He=n(jt,"styled"),jt.forEach(t),Le=p(T),J=s(T,"P",{});var qt=l(J);K=s(qt,"CODE",{});var Mt=l(K);Oe=n(Mt,"Boolean (default: true)"),Mt.forEach(t),qt.forEach(t),Ue=p(T),P=s(T,"P",{});var Ee=l(P);Re=n(Ee,"If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),xe=s(Ee,"BR",{}),Se=n(Ee,`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Ee.forEach(t),T.forEach(t),Te=p(u),m=s(u,"LI",{});var A=l(m);N=s(A,"H3",{});var Wt=l(N);Ae=n(Wt,"themes"),Wt.forEach(t),je=p(A),Q=s(A,"P",{});var Yt=l(Q);V=s(Yt,"CODE",{});var zt=l(V);qe=n(zt,"Boolean or array (default: true)"),zt.forEach(t),Yt.forEach(t),Me=p(A),w=s(A,"P",{});var me=l(w);We=n(me,`If it\u2019s true, all themes will be included.
If it\u2019s false, only light (default) theme will be available.`),Ye=s(me,"BR",{}),ze=n(me,`
If it\u2019s an array, only themes in the array will be included and the first theme will be the default theme.
Read more about `),S=s(me,"A",{href:!0});var Ft=l(S);Fe=n(Ft,"themes"),Ft.forEach(t),me.forEach(t),A.forEach(t),Ge=p(u),k=s(u,"LI",{});var j=l(k);X=s(j,"H3",{});var Gt=l(X);Je=n(Gt,"base"),Gt.forEach(t),Ke=p(j),Z=s(j,"P",{});var Jt=l(Z);$=s(Jt,"CODE",{});var Kt=l($);Ne=n(Kt,"Boolean (default: true)"),Kt.forEach(t),Jt.forEach(t),Qe=p(j),D=s(j,"P",{});var _e=l(D);Ve=n(_e,"If it\u2019s true, "),H=s(_e,"A",{href:!0,rel:!0});var Nt=l(H);Xe=n(Nt,"a few base styles"),Nt.forEach(t),Ze=n(_e," will be added"),_e.forEach(t),j.forEach(t),$e=p(u),v=s(u,"LI",{});var q=l(v);ee=s(q,"H3",{});var Qt=l(ee);et=n(Qt,"utils"),Qt.forEach(t),tt=p(q),te=s(q,"P",{});var Vt=l(te);ae=s(Vt,"CODE",{});var Xt=l(ae);at=n(Xt,"Boolean (default: true)"),Xt.forEach(t),Vt.forEach(t),st=p(q),L=s(q,"P",{});var ge=l(L);lt=n(ge,"If it\u2019s true, "),O=s(ge,"A",{href:!0,rel:!0});var Zt=l(O);ot=n(Zt,"responsive and utility classes"),Zt.forEach(t),nt=n(ge," will be added"),ge.forEach(t),q.forEach(t),rt=p(u),b=s(u,"LI",{});var M=l(b);se=s(M,"H3",{});var $t=l(se);it=n($t,"logs"),$t.forEach(t),pt=p(M),le=s(M,"P",{});var ea=l(le);oe=s(ea,"CODE",{});var ta=l(oe);dt=n(ta,"Boolean (default: true)"),ta.forEach(t),ea.forEach(t),ct=p(M),ne=s(M,"P",{});var aa=l(ne);ut=n(aa,"If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),aa.forEach(t),M.forEach(t),ht=p(u),E=s(u,"LI",{});var W=l(E);re=s(W,"H3",{});var sa=l(re);ft=n(sa,"rtl"),sa.forEach(t),yt=p(W),ie=s(W,"P",{});var la=l(ie);pe=s(la,"CODE",{});var oa=l(pe);mt=n(oa,"Boolean (default: false)"),oa.forEach(t),la.forEach(t),kt=p(W),f=s(W,"P",{});var I=l(f);vt=n(I,"If it\u2019s true, your theme will be right-to-left. You need to add "),de=s(I,"CODE",{});var na=l(de);bt=n(na,'dir="rtl"'),na.forEach(t),Et=n(I," to your body tag."),_t=s(I,"BR",{}),gt=n(I,`
If you\u2019re using daisyUI with RTL option, I suggest using `),U=s(I,"A",{href:!0,rel:!0});var ra=l(U);wt=n(ra,"tailwindcss-flip"),ra.forEach(t),It=n(I," plugin because to flip all your Tailwind utilities automatically."),I.forEach(t),W.forEach(t),Bt=p(u),_=s(u,"LI",{});var Y=l(_);ce=s(Y,"H3",{});var ia=l(ce);Ct=n(ia,"darkTheme"),ia.forEach(t),Pt=p(Y),ue=s(Y,"P",{});var pa=l(ue);he=s(pa,"CODE",{});var da=l(he);Dt=n(da,'String (default: "dark")'),da.forEach(t),pa.forEach(t),Ht=p(Y),g=s(Y,"P",{});var z=l(g);Lt=n(z,"Allows us to pick another theme for system\u2019s auto dark mode. By default, "),fe=s(z,"CODE",{});var ca=l(fe);Ot=n(ca,"dark"),ca.forEach(t),Ut=n(z," theme (or a custom theme named "),ye=s(z,"CODE",{});var ua=l(ye);Rt=n(ua,"dark"),ua.forEach(t),xt=n(z,") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),z.forEach(t),Y.forEach(t),u.forEach(t),this.h()},h(){B(C,"class","language-js"),B(S,"href","/docs/themes"),B(H,"href","https://github.com/saadeghi/daisyui/blob/master/src/base"),B(H,"rel","nofollow"),B(O,"href","https://github.com/saadeghi/daisyui/tree/master/src/utilities"),B(O,"rel","nofollow"),B(U,"href","https://github.com/cvrajeesh/tailwindcss-flip"),B(U,"rel","nofollow")},m(r,c){R(r,h,c),e(h,we),e(h,F),e(F,Ie),e(h,Be),e(h,Ce),e(h,Pe),R(r,ke,c),R(r,C,c),C.innerHTML=fa,R(r,ve,c),R(r,x,c),e(x,De),R(r,be,c),R(r,d,c),e(d,y),e(y,G),e(G,He),e(y,Le),e(y,J),e(J,K),e(K,Oe),e(y,Ue),e(y,P),e(P,Re),e(P,xe),e(P,Se),e(d,Te),e(d,m),e(m,N),e(N,Ae),e(m,je),e(m,Q),e(Q,V),e(V,qe),e(m,Me),e(m,w),e(w,We),e(w,Ye),e(w,ze),e(w,S),e(S,Fe),e(d,Ge),e(d,k),e(k,X),e(X,Je),e(k,Ke),e(k,Z),e(Z,$),e($,Ne),e(k,Qe),e(k,D),e(D,Ve),e(D,H),e(H,Xe),e(D,Ze),e(d,$e),e(d,v),e(v,ee),e(ee,et),e(v,tt),e(v,te),e(te,ae),e(ae,at),e(v,st),e(v,L),e(L,lt),e(L,O),e(O,ot),e(L,nt),e(d,rt),e(d,b),e(b,se),e(se,it),e(b,pt),e(b,le),e(le,oe),e(oe,dt),e(b,ct),e(b,ne),e(ne,ut),e(d,ht),e(d,E),e(E,re),e(re,ft),e(E,yt),e(E,ie),e(ie,pe),e(pe,mt),e(E,kt),e(E,f),e(f,vt),e(f,de),e(de,bt),e(f,Et),e(f,_t),e(f,gt),e(f,U),e(U,wt),e(f,It),e(d,Bt),e(d,_),e(_,ce),e(ce,Ct),e(_,Pt),e(_,ue),e(ue,he),e(he,Dt),e(_,Ht),e(_,g),e(g,Lt),e(g,fe),e(fe,Ot),e(g,Ut),e(g,ye),e(ye,Rt),e(g,xt)},p:St,i:St,o:St,d(r){r&&t(h),r&&t(ke),r&&t(C),r&&t(ve),r&&t(x),r&&t(be),r&&t(d)}}}const _a={title:"Config",desc:"How to change the default configuration of daisyUI?",published:!0};class ga extends ma{constructor(h){super();ka(this,h,null,ba,va,{})}}export{ga as default,_a as metadata};
