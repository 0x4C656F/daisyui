import{S as Qt,i as Vt,s as Xt,e as a,t as l,k as p,c as s,a as n,h as o,d as t,m as c,b as v,g as x,H as e,K as Lt}from"../../chunks/vendor-6c3f1da5.js";function Zt(Gt){let f,ye,z,ke,ve,be,Ee,se,b,Jt=`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>

  <span class="token comment">// add daisyUI plugin</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token comment">// daisyUI config (optional)</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">styled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">utils</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">logs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rtl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">darkTheme</span><span class="token operator">:</span> <span class="token string">"dark"</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,le,T,_e,oe,i,E,A,ge,F,we,Ie,_,Ce,De,He,Le,g,B,Oe,G,Ue,Pe,y,Re,xe,Te,S,Ae,Be,w,j,Se,J,je,qe,I,We,C,Ye,Ke,Me,D,q,ze,N,Fe,Ge,H,Je,L,Ne,Qe,Ve,O,W,Xe,Q,Ze,$e,V,et,tt,U,Y,at,X,st,lt,h,ot,Z,nt,rt,it,pt,P,ct,dt,ut,R,K,ft,$,ht,mt,m,yt,ee,kt,vt,te,bt,Et;return{c(){f=a("p"),ye=l("daisyUI can be configured from your "),z=a("code"),ke=l("tailwind.config.js"),ve=l(" file."),be=a("br"),Ee=l(`
Default config:`),se=p(),b=a("pre"),le=p(),T=a("h2"),_e=l("Config values explained:"),oe=p(),i=a("ul"),E=a("li"),A=a("h3"),ge=l("styled "),F=a("code"),we=l("default: true"),Ie=p(),_=a("p"),Ce=l("If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),De=a("br"),He=l(`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Le=p(),g=a("li"),B=a("h3"),Oe=l("themes "),G=a("code"),Ue=l("default: true"),Pe=p(),y=a("p"),Re=l(`If it\u2019s true, all themes will be included.
If it\u2019s false, only light theme will be available.`),xe=a("br"),Te=l(`
Read more about `),S=a("a"),Ae=l("themes"),Be=p(),w=a("li"),j=a("h3"),Se=l("base "),J=a("code"),je=l("default: true"),qe=p(),I=a("p"),We=l("If it\u2019s true, "),C=a("a"),Ye=l("a few base styles"),Ke=l(" will be added"),Me=p(),D=a("li"),q=a("h3"),ze=l("utils "),N=a("code"),Fe=l("default: true"),Ge=p(),H=a("p"),Je=l("If it\u2019s true, "),L=a("a"),Ne=l("responsive and utility classes"),Qe=l(" will be added"),Ve=p(),O=a("li"),W=a("h3"),Xe=l("logs "),Q=a("code"),Ze=l("default: true"),$e=p(),V=a("p"),et=l("If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),tt=p(),U=a("li"),Y=a("h3"),at=l("rtl "),X=a("code"),st=l("default: false"),lt=p(),h=a("p"),ot=l("If it\u2019s true, your theme will be right-to-left. You need to add "),Z=a("code"),nt=l('dir="rtl"'),rt=l(" to your body tag."),it=a("br"),pt=l(`
If you\u2019re using daisyUI with RTL option, I suggest using `),P=a("a"),ct=l("tailwindcss-flip"),dt=l(" plugin because to flip all your Tailwind utilities automatically."),ut=p(),R=a("li"),K=a("h3"),ft=l("darkTheme "),$=a("code"),ht=l('default: "dark"'),mt=p(),m=a("p"),yt=l("Allows us to pick another theme for system\u2019s auto dark mode. By default, "),ee=a("code"),kt=l("dark"),vt=l(" theme (or a custom theme named "),te=a("code"),bt=l("dark"),Et=l(") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),this.h()},l(r){f=s(r,"P",{});var d=n(f);ye=o(d,"daisyUI can be configured from your "),z=s(d,"CODE",{});var Ot=n(z);ke=o(Ot,"tailwind.config.js"),Ot.forEach(t),ve=o(d," file."),be=s(d,"BR",{}),Ee=o(d,`
Default config:`),d.forEach(t),se=c(r),b=s(r,"PRE",{class:!0});var Nt=n(b);Nt.forEach(t),le=c(r),T=s(r,"H2",{});var Ut=n(T);_e=o(Ut,"Config values explained:"),Ut.forEach(t),oe=c(r),i=s(r,"UL",{});var u=n(i);E=s(u,"LI",{});var ne=n(E);A=s(ne,"H3",{});var _t=n(A);ge=o(_t,"styled "),F=s(_t,"CODE",{});var Pt=n(F);we=o(Pt,"default: true"),Pt.forEach(t),_t.forEach(t),Ie=c(ne),_=s(ne,"P",{});var re=n(_);Ce=o(re,"If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),De=s(re,"BR",{}),He=o(re,`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),re.forEach(t),ne.forEach(t),Le=c(u),g=s(u,"LI",{});var ie=n(g);B=s(ie,"H3",{});var gt=n(B);Oe=o(gt,"themes "),G=s(gt,"CODE",{});var Rt=n(G);Ue=o(Rt,"default: true"),Rt.forEach(t),gt.forEach(t),Pe=c(ie),y=s(ie,"P",{});var ae=n(y);Re=o(ae,`If it\u2019s true, all themes will be included.
If it\u2019s false, only light theme will be available.`),xe=s(ae,"BR",{}),Te=o(ae,`
Read more about `),S=s(ae,"A",{href:!0});var xt=n(S);Ae=o(xt,"themes"),xt.forEach(t),ae.forEach(t),ie.forEach(t),Be=c(u),w=s(u,"LI",{});var pe=n(w);j=s(pe,"H3",{});var wt=n(j);Se=o(wt,"base "),J=s(wt,"CODE",{});var Tt=n(J);je=o(Tt,"default: true"),Tt.forEach(t),wt.forEach(t),qe=c(pe),I=s(pe,"P",{});var ce=n(I);We=o(ce,"If it\u2019s true, "),C=s(ce,"A",{href:!0,rel:!0});var At=n(C);Ye=o(At,"a few base styles"),At.forEach(t),Ke=o(ce," will be added"),ce.forEach(t),pe.forEach(t),Me=c(u),D=s(u,"LI",{});var de=n(D);q=s(de,"H3",{});var It=n(q);ze=o(It,"utils "),N=s(It,"CODE",{});var Bt=n(N);Fe=o(Bt,"default: true"),Bt.forEach(t),It.forEach(t),Ge=c(de),H=s(de,"P",{});var ue=n(H);Je=o(ue,"If it\u2019s true, "),L=s(ue,"A",{href:!0,rel:!0});var St=n(L);Ne=o(St,"responsive and utility classes"),St.forEach(t),Qe=o(ue," will be added"),ue.forEach(t),de.forEach(t),Ve=c(u),O=s(u,"LI",{});var fe=n(O);W=s(fe,"H3",{});var Ct=n(W);Xe=o(Ct,"logs "),Q=s(Ct,"CODE",{});var jt=n(Q);Ze=o(jt,"default: true"),jt.forEach(t),Ct.forEach(t),$e=c(fe),V=s(fe,"P",{});var qt=n(V);et=o(qt,"If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),qt.forEach(t),fe.forEach(t),tt=c(u),U=s(u,"LI",{});var he=n(U);Y=s(he,"H3",{});var Dt=n(Y);at=o(Dt,"rtl "),X=s(Dt,"CODE",{});var Wt=n(X);st=o(Wt,"default: false"),Wt.forEach(t),Dt.forEach(t),lt=c(he),h=s(he,"P",{});var k=n(h);ot=o(k,"If it\u2019s true, your theme will be right-to-left. You need to add "),Z=s(k,"CODE",{});var Yt=n(Z);nt=o(Yt,'dir="rtl"'),Yt.forEach(t),rt=o(k," to your body tag."),it=s(k,"BR",{}),pt=o(k,`
If you\u2019re using daisyUI with RTL option, I suggest using `),P=s(k,"A",{href:!0,rel:!0});var Kt=n(P);ct=o(Kt,"tailwindcss-flip"),Kt.forEach(t),dt=o(k," plugin because to flip all your Tailwind utilities automatically."),k.forEach(t),he.forEach(t),ut=c(u),R=s(u,"LI",{});var me=n(R);K=s(me,"H3",{});var Ht=n(K);ft=o(Ht,"darkTheme "),$=s(Ht,"CODE",{});var Mt=n($);ht=o(Mt,'default: "dark"'),Mt.forEach(t),Ht.forEach(t),mt=c(me),m=s(me,"P",{});var M=n(m);yt=o(M,"Allows us to pick another theme for system\u2019s auto dark mode. By default, "),ee=s(M,"CODE",{});var zt=n(ee);kt=o(zt,"dark"),zt.forEach(t),vt=o(M," theme (or a custom theme named "),te=s(M,"CODE",{});var Ft=n(te);bt=o(Ft,"dark"),Ft.forEach(t),Et=o(M,") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),M.forEach(t),me.forEach(t),u.forEach(t),this.h()},h(){v(b,"class","language-js"),v(S,"href","/docs/themes"),v(C,"href","https://github.com/saadeghi/daisyui/blob/master/src/base"),v(C,"rel","nofollow"),v(L,"href","https://github.com/saadeghi/daisyui/tree/master/src/utilities"),v(L,"rel","nofollow"),v(P,"href","https://github.com/cvrajeesh/tailwindcss-flip"),v(P,"rel","nofollow")},m(r,d){x(r,f,d),e(f,ye),e(f,z),e(z,ke),e(f,ve),e(f,be),e(f,Ee),x(r,se,d),x(r,b,d),b.innerHTML=Jt,x(r,le,d),x(r,T,d),e(T,_e),x(r,oe,d),x(r,i,d),e(i,E),e(E,A),e(A,ge),e(A,F),e(F,we),e(E,Ie),e(E,_),e(_,Ce),e(_,De),e(_,He),e(i,Le),e(i,g),e(g,B),e(B,Oe),e(B,G),e(G,Ue),e(g,Pe),e(g,y),e(y,Re),e(y,xe),e(y,Te),e(y,S),e(S,Ae),e(i,Be),e(i,w),e(w,j),e(j,Se),e(j,J),e(J,je),e(w,qe),e(w,I),e(I,We),e(I,C),e(C,Ye),e(I,Ke),e(i,Me),e(i,D),e(D,q),e(q,ze),e(q,N),e(N,Fe),e(D,Ge),e(D,H),e(H,Je),e(H,L),e(L,Ne),e(H,Qe),e(i,Ve),e(i,O),e(O,W),e(W,Xe),e(W,Q),e(Q,Ze),e(O,$e),e(O,V),e(V,et),e(i,tt),e(i,U),e(U,Y),e(Y,at),e(Y,X),e(X,st),e(U,lt),e(U,h),e(h,ot),e(h,Z),e(Z,nt),e(h,rt),e(h,it),e(h,pt),e(h,P),e(P,ct),e(h,dt),e(i,ut),e(i,R),e(R,K),e(K,ft),e(K,$),e($,ht),e(R,mt),e(R,m),e(m,yt),e(m,ee),e(ee,kt),e(m,vt),e(m,te),e(te,bt),e(m,Et)},p:Lt,i:Lt,o:Lt,d(r){r&&t(f),r&&t(se),r&&t(b),r&&t(le),r&&t(T),r&&t(oe),r&&t(i)}}}const ea={title:"Config",desc:"How to change the default configuration of daisyUI?",published:!0};class ta extends Qt{constructor(f){super();Vt(this,f,null,Zt,Xt,{})}}export{ta as default,ea as metadata};
