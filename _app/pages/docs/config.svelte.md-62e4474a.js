import{S as Es,i as ks,s as vs,e as a,t as o,k as i,c as s,a as n,h as l,d as t,m as d,b as S,g as R,H as e,M as Ca}from"../../chunks/vendor-1fc5b034.js";function gs(ys){let y,qe,N,Fe,Me,We,Ye,He,O,ms=`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">//...</span>

  <span class="token comment">// add daisyUI plugin</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token comment">// daisyUI config (optional)</span>
  <span class="token literal-property property">daisyui</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>
    <span class="token literal-property property">styled</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">themes</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">utils</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">logs</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rtl</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token literal-property property">prefix</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>
    <span class="token literal-property property">darkTheme</span><span class="token operator">:</span> <span class="token string">"dark"</span><span class="token punctuation">,</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`,Le,A,ze,Te,u,b,Q,Ge,Je,V,X,Ke,Ne,B,Qe,Ve,Xe,Ze,E,Z,$e,et,$,ee,tt,at,x,st,ot,lt,j,nt,rt,k,te,it,dt,ae,se,ct,pt,P,ut,U,ft,ht,yt,v,oe,mt,bt,le,ne,Et,kt,H,vt,L,gt,_t,wt,g,re,It,Ct,ie,de,xt,Dt,ce,St,Ot,_,pe,Bt,Pt,ue,fe,Ut,Ht,m,Lt,he,Tt,Rt,At,jt,T,qt,Ft,Mt,w,ye,Wt,Yt,me,be,zt,Gt,I,Jt,Ee,Kt,Nt,ke,Qt,Vt,Xt,C,ve,Zt,$t,ge,_e,ea,ta,r,aa,we,sa,oa,Ie,la,na,ra,ia,Ce,da,ca,xe,pa,ua,fa,ha,De,ya,ma,Se,ba,Ea,Oe,ka,va,Be,ga,_a,Pe,wa,Ia;return{c(){y=a("p"),qe=o("daisyUI can be configured from your "),N=a("code"),Fe=o("tailwind.config.js"),Me=o(" file."),We=a("br"),Ye=o(`
Default config:`),He=i(),O=a("pre"),Le=i(),A=a("h2"),ze=o("Config values explained:"),Te=i(),u=a("ul"),b=a("li"),Q=a("h3"),Ge=o("styled"),Je=i(),V=a("p"),X=a("code"),Ke=o("Boolean (default: true)"),Ne=i(),B=a("p"),Qe=o("If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),Ve=a("br"),Xe=o(`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Ze=i(),E=a("li"),Z=a("h3"),$e=o("themes"),et=i(),$=a("p"),ee=a("code"),tt=o("Boolean or array (default: true)"),at=i(),x=a("p"),st=o(`If it\u2019s true, all themes will be included.
If it\u2019s false, only light (default) theme will be available.`),ot=a("br"),lt=o(`
If it\u2019s an array, only themes in the array will be included and the first theme will be the default theme.
Read more about `),j=a("a"),nt=o("themes"),rt=i(),k=a("li"),te=a("h3"),it=o("base"),dt=i(),ae=a("p"),se=a("code"),ct=o("Boolean (default: true)"),pt=i(),P=a("p"),ut=o("If it\u2019s true, "),U=a("a"),ft=o("a few base styles"),ht=o(" will be added"),yt=i(),v=a("li"),oe=a("h3"),mt=o("utils"),bt=i(),le=a("p"),ne=a("code"),Et=o("Boolean (default: true)"),kt=i(),H=a("p"),vt=o("If it\u2019s true, "),L=a("a"),gt=o("responsive and utility classes"),_t=o(" will be added"),wt=i(),g=a("li"),re=a("h3"),It=o("logs"),Ct=i(),ie=a("p"),de=a("code"),xt=o("Boolean (default: true)"),Dt=i(),ce=a("p"),St=o("If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),Ot=i(),_=a("li"),pe=a("h3"),Bt=o("rtl"),Pt=i(),ue=a("p"),fe=a("code"),Ut=o("Boolean (default: false)"),Ht=i(),m=a("p"),Lt=o("If it\u2019s true, your theme will be right-to-left. You need to add "),he=a("code"),Tt=o('dir="rtl"'),Rt=o(" to your body tag."),At=a("br"),jt=o(`
If you\u2019re using daisyUI with RTL option, I suggest using `),T=a("a"),qt=o("tailwindcss-flip"),Ft=o(" plugin because to flip all your Tailwind utilities automatically."),Mt=i(),w=a("li"),ye=a("h3"),Wt=o("darkTheme"),Yt=i(),me=a("p"),be=a("code"),zt=o('String (default: "dark")'),Gt=i(),I=a("p"),Jt=o("Allows us to pick another theme for system\u2019s auto dark mode. By default, "),Ee=a("code"),Kt=o("dark"),Nt=o(" theme (or a custom theme named "),ke=a("code"),Qt=o("dark"),Vt=o(") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),Xt=i(),C=a("li"),ve=a("h3"),Zt=o("prefix"),$t=i(),ge=a("p"),_e=a("code"),ea=o('String (default: "")'),ta=i(),r=a("p"),aa=o(`Adds a prefix to class name for all daisyUI classes (including component classes, modifier classes and responsive classes).
For example: `),we=a("code"),sa=o("btn"),oa=o(" will become "),Ie=a("code"),la=o("prefix-btn"),na=o("."),ra=a("br"),ia=o(`
If you\u2019re using a second CSS library that has similar class names, you can use this config to avoid conflicts.
Utility classes like color names (e.g. `),Ce=a("code"),da=o("bg-primary"),ca=o(") or border-radius (e.g. "),xe=a("code"),pa=o("rounded-box"),ua=o(") will not be affected by this config because they\u2019re being added as extensions to Tailwind CSS classes."),fa=a("br"),ha=o(`
If you use daisyUI `),De=a("code"),ya=o("prefix"),ma=o(" option (like "),Se=a("code"),ba=o("daisy-"),Ea=o(") and Tailwind CSS "),Oe=a("code"),ka=o("prefix"),va=o(" option (like "),Be=a("code"),ga=o("tw-"),_a=o(") together, classnames will be prefixed like this: "),Pe=a("code"),wa=o("tw-daisy-btn"),Ia=o("."),this.h()},l(p){y=s(p,"P",{});var h=n(y);qe=l(h,"daisyUI can be configured from your "),N=s(h,"CODE",{});var xa=n(N);Fe=l(xa,"tailwind.config.js"),xa.forEach(t),Me=l(h," file."),We=s(h,"BR",{}),Ye=l(h,`
Default config:`),h.forEach(t),He=d(p),O=s(p,"PRE",{class:!0});var bs=n(O);bs.forEach(t),Le=d(p),A=s(p,"H2",{});var Da=n(A);ze=l(Da,"Config values explained:"),Da.forEach(t),Te=d(p),u=s(p,"UL",{});var f=n(u);b=s(f,"LI",{});var q=n(b);Q=s(q,"H3",{});var Sa=n(Q);Ge=l(Sa,"styled"),Sa.forEach(t),Je=d(q),V=s(q,"P",{});var Oa=n(V);X=s(Oa,"CODE",{});var Ba=n(X);Ke=l(Ba,"Boolean (default: true)"),Ba.forEach(t),Oa.forEach(t),Ne=d(q),B=s(q,"P",{});var Re=n(B);Qe=l(Re,"If it\u2019s true, components will have colors and style so you won\u2019t need to design anything."),Ve=s(Re,"BR",{}),Xe=l(Re,`
If it\u2019s false, components will have no color and no visual style so you can design your own style on a basic skeleton.`),Re.forEach(t),q.forEach(t),Ze=d(f),E=s(f,"LI",{});var F=n(E);Z=s(F,"H3",{});var Pa=n(Z);$e=l(Pa,"themes"),Pa.forEach(t),et=d(F),$=s(F,"P",{});var Ua=n($);ee=s(Ua,"CODE",{});var Ha=n(ee);tt=l(Ha,"Boolean or array (default: true)"),Ha.forEach(t),Ua.forEach(t),at=d(F),x=s(F,"P",{});var Ue=n(x);st=l(Ue,`If it\u2019s true, all themes will be included.
If it\u2019s false, only light (default) theme will be available.`),ot=s(Ue,"BR",{}),lt=l(Ue,`
If it\u2019s an array, only themes in the array will be included and the first theme will be the default theme.
Read more about `),j=s(Ue,"A",{href:!0});var La=n(j);nt=l(La,"themes"),La.forEach(t),Ue.forEach(t),F.forEach(t),rt=d(f),k=s(f,"LI",{});var M=n(k);te=s(M,"H3",{});var Ta=n(te);it=l(Ta,"base"),Ta.forEach(t),dt=d(M),ae=s(M,"P",{});var Ra=n(ae);se=s(Ra,"CODE",{});var Aa=n(se);ct=l(Aa,"Boolean (default: true)"),Aa.forEach(t),Ra.forEach(t),pt=d(M),P=s(M,"P",{});var Ae=n(P);ut=l(Ae,"If it\u2019s true, "),U=s(Ae,"A",{href:!0,rel:!0});var ja=n(U);ft=l(ja,"a few base styles"),ja.forEach(t),ht=l(Ae," will be added"),Ae.forEach(t),M.forEach(t),yt=d(f),v=s(f,"LI",{});var W=n(v);oe=s(W,"H3",{});var qa=n(oe);mt=l(qa,"utils"),qa.forEach(t),bt=d(W),le=s(W,"P",{});var Fa=n(le);ne=s(Fa,"CODE",{});var Ma=n(ne);Et=l(Ma,"Boolean (default: true)"),Ma.forEach(t),Fa.forEach(t),kt=d(W),H=s(W,"P",{});var je=n(H);vt=l(je,"If it\u2019s true, "),L=s(je,"A",{href:!0,rel:!0});var Wa=n(L);gt=l(Wa,"responsive and utility classes"),Wa.forEach(t),_t=l(je," will be added"),je.forEach(t),W.forEach(t),wt=d(f),g=s(f,"LI",{});var Y=n(g);re=s(Y,"H3",{});var Ya=n(re);It=l(Ya,"logs"),Ya.forEach(t),Ct=d(Y),ie=s(Y,"P",{});var za=n(ie);de=s(za,"CODE",{});var Ga=n(de);xt=l(Ga,"Boolean (default: true)"),Ga.forEach(t),za.forEach(t),Dt=d(Y),ce=s(Y,"P",{});var Ja=n(ce);St=l(Ja,"If it\u2019s true, daisyUI shows logs in terminal while CSS is building"),Ja.forEach(t),Y.forEach(t),Ot=d(f),_=s(f,"LI",{});var z=n(_);pe=s(z,"H3",{});var Ka=n(pe);Bt=l(Ka,"rtl"),Ka.forEach(t),Pt=d(z),ue=s(z,"P",{});var Na=n(ue);fe=s(Na,"CODE",{});var Qa=n(fe);Ut=l(Qa,"Boolean (default: false)"),Qa.forEach(t),Na.forEach(t),Ht=d(z),m=s(z,"P",{});var D=n(m);Lt=l(D,"If it\u2019s true, your theme will be right-to-left. You need to add "),he=s(D,"CODE",{});var Va=n(he);Tt=l(Va,'dir="rtl"'),Va.forEach(t),Rt=l(D," to your body tag."),At=s(D,"BR",{}),jt=l(D,`
If you\u2019re using daisyUI with RTL option, I suggest using `),T=s(D,"A",{href:!0,rel:!0});var Xa=n(T);qt=l(Xa,"tailwindcss-flip"),Xa.forEach(t),Ft=l(D," plugin because to flip all your Tailwind utilities automatically."),D.forEach(t),z.forEach(t),Mt=d(f),w=s(f,"LI",{});var G=n(w);ye=s(G,"H3",{});var Za=n(ye);Wt=l(Za,"darkTheme"),Za.forEach(t),Yt=d(G),me=s(G,"P",{});var $a=n(me);be=s($a,"CODE",{});var es=n(be);zt=l(es,'String (default: "dark")'),es.forEach(t),$a.forEach(t),Gt=d(G),I=s(G,"P",{});var J=n(I);Jt=l(J,"Allows us to pick another theme for system\u2019s auto dark mode. By default, "),Ee=s(J,"CODE",{});var ts=n(Ee);Kt=l(ts,"dark"),ts.forEach(t),Nt=l(J," theme (or a custom theme named "),ke=s(J,"CODE",{});var as=n(ke);Qt=l(as,"dark"),as.forEach(t),Vt=l(J,") will be the default theme if no theme is specified and the user is using dark mode on their system. With this config, you can set another theme to be the default dark mode theme."),J.forEach(t),G.forEach(t),Xt=d(f),C=s(f,"LI",{});var K=n(C);ve=s(K,"H3",{});var ss=n(ve);Zt=l(ss,"prefix"),ss.forEach(t),$t=d(K),ge=s(K,"P",{});var os=n(ge);_e=s(os,"CODE",{});var ls=n(_e);ea=l(ls,'String (default: "")'),ls.forEach(t),os.forEach(t),ta=d(K),r=s(K,"P",{});var c=n(r);aa=l(c,`Adds a prefix to class name for all daisyUI classes (including component classes, modifier classes and responsive classes).
For example: `),we=s(c,"CODE",{});var ns=n(we);sa=l(ns,"btn"),ns.forEach(t),oa=l(c," will become "),Ie=s(c,"CODE",{});var rs=n(Ie);la=l(rs,"prefix-btn"),rs.forEach(t),na=l(c,"."),ra=s(c,"BR",{}),ia=l(c,`
If you\u2019re using a second CSS library that has similar class names, you can use this config to avoid conflicts.
Utility classes like color names (e.g. `),Ce=s(c,"CODE",{});var is=n(Ce);da=l(is,"bg-primary"),is.forEach(t),ca=l(c,") or border-radius (e.g. "),xe=s(c,"CODE",{});var ds=n(xe);pa=l(ds,"rounded-box"),ds.forEach(t),ua=l(c,") will not be affected by this config because they\u2019re being added as extensions to Tailwind CSS classes."),fa=s(c,"BR",{}),ha=l(c,`
If you use daisyUI `),De=s(c,"CODE",{});var cs=n(De);ya=l(cs,"prefix"),cs.forEach(t),ma=l(c," option (like "),Se=s(c,"CODE",{});var ps=n(Se);ba=l(ps,"daisy-"),ps.forEach(t),Ea=l(c,") and Tailwind CSS "),Oe=s(c,"CODE",{});var us=n(Oe);ka=l(us,"prefix"),us.forEach(t),va=l(c," option (like "),Be=s(c,"CODE",{});var fs=n(Be);ga=l(fs,"tw-"),fs.forEach(t),_a=l(c,") together, classnames will be prefixed like this: "),Pe=s(c,"CODE",{});var hs=n(Pe);wa=l(hs,"tw-daisy-btn"),hs.forEach(t),Ia=l(c,"."),c.forEach(t),K.forEach(t),f.forEach(t),this.h()},h(){S(O,"class","language-js"),S(j,"href","/docs/themes"),S(U,"href","https://github.com/saadeghi/daisyui/blob/master/src/base"),S(U,"rel","nofollow"),S(L,"href","https://github.com/saadeghi/daisyui/tree/master/src/utilities"),S(L,"rel","nofollow"),S(T,"href","https://github.com/cvrajeesh/tailwindcss-flip"),S(T,"rel","nofollow")},m(p,h){R(p,y,h),e(y,qe),e(y,N),e(N,Fe),e(y,Me),e(y,We),e(y,Ye),R(p,He,h),R(p,O,h),O.innerHTML=ms,R(p,Le,h),R(p,A,h),e(A,ze),R(p,Te,h),R(p,u,h),e(u,b),e(b,Q),e(Q,Ge),e(b,Je),e(b,V),e(V,X),e(X,Ke),e(b,Ne),e(b,B),e(B,Qe),e(B,Ve),e(B,Xe),e(u,Ze),e(u,E),e(E,Z),e(Z,$e),e(E,et),e(E,$),e($,ee),e(ee,tt),e(E,at),e(E,x),e(x,st),e(x,ot),e(x,lt),e(x,j),e(j,nt),e(u,rt),e(u,k),e(k,te),e(te,it),e(k,dt),e(k,ae),e(ae,se),e(se,ct),e(k,pt),e(k,P),e(P,ut),e(P,U),e(U,ft),e(P,ht),e(u,yt),e(u,v),e(v,oe),e(oe,mt),e(v,bt),e(v,le),e(le,ne),e(ne,Et),e(v,kt),e(v,H),e(H,vt),e(H,L),e(L,gt),e(H,_t),e(u,wt),e(u,g),e(g,re),e(re,It),e(g,Ct),e(g,ie),e(ie,de),e(de,xt),e(g,Dt),e(g,ce),e(ce,St),e(u,Ot),e(u,_),e(_,pe),e(pe,Bt),e(_,Pt),e(_,ue),e(ue,fe),e(fe,Ut),e(_,Ht),e(_,m),e(m,Lt),e(m,he),e(he,Tt),e(m,Rt),e(m,At),e(m,jt),e(m,T),e(T,qt),e(m,Ft),e(u,Mt),e(u,w),e(w,ye),e(ye,Wt),e(w,Yt),e(w,me),e(me,be),e(be,zt),e(w,Gt),e(w,I),e(I,Jt),e(I,Ee),e(Ee,Kt),e(I,Nt),e(I,ke),e(ke,Qt),e(I,Vt),e(u,Xt),e(u,C),e(C,ve),e(ve,Zt),e(C,$t),e(C,ge),e(ge,_e),e(_e,ea),e(C,ta),e(C,r),e(r,aa),e(r,we),e(we,sa),e(r,oa),e(r,Ie),e(Ie,la),e(r,na),e(r,ra),e(r,ia),e(r,Ce),e(Ce,da),e(r,ca),e(r,xe),e(xe,pa),e(r,ua),e(r,fa),e(r,ha),e(r,De),e(De,ya),e(r,ma),e(r,Se),e(Se,ba),e(r,Ea),e(r,Oe),e(Oe,ka),e(r,va),e(r,Be),e(Be,ga),e(r,_a),e(r,Pe),e(Pe,wa),e(r,Ia)},p:Ca,i:Ca,o:Ca,d(p){p&&t(y),p&&t(He),p&&t(O),p&&t(Le),p&&t(A),p&&t(Te),p&&t(u)}}}const ws={title:"Config",desc:"How to change the default configuration of daisyUI?",published:!0};class Is extends Es{constructor(y){super();ks(this,y,null,gs,vs,{})}}export{Is as default,ws as metadata};
