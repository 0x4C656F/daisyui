import{s as mt,E as Da,O as nt,f as p,a as l,l as et,g as c,h,z as na,d as t,c as r,m as ot,j as d,i,v as e,w as ut}from"../chunks/scheduler.e71eccdd.js";import{S as gt,i as xt,b as f,d as m,m as u,a as g,t as x,e as $}from"../chunks/index.445ee094.js";import{g as $t,a as pt}from"../chunks/index.18b79e66.js";import{M as yt}from"../chunks/mdsvex.0c396191.js";import{T as y}from"../chunks/Translate.96ea0fcb.js";function vt(ea){let o,k,O='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',_,b,n,S,Oa,A,Ma,oa,Ya='<li><span class="badge badge-xs bg-green-500"></span> bg-green-500</li> <li><span class="badge badge-xs bg-orange-600"></span> bg-orange-600</li> <li><span class="badge badge-xs bg-blue-700"></span> bg-blue-700</li> <li>etc.</li>',Ta,R,Ha,pa,Va='<li><span class="badge badge-xs bg-primary"></span> bg-primary</li> <li><span class="badge badge-xs bg-secondary"></span> bg-secondary</li> <li><span class="badge badge-xs bg-accent"></span> bg-accent</li> <li>etc.</li>',Aa,W,Ra,N,w,za='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',q,Wa,I,Na,F,fa,M,E,Ga='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',B,ma,U,ua,j,la,P,ra,C,ga,qa,da,D,Ia,ia,Y,Fa,ba,V,Ba,ca,Ja='<tr><td><span class="badge relative top-4 bg-primary"></span></td> <td><span class="font-mono font-bold">primary</span> <br/> <span class="text-xs opacity-60">Primary color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--p))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-primary-focus"></span></td> <td><span class="font-mono font-bold">primary-focus</span> <br/> <span class="text-xs opacity-60">Primary color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of primary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--pf))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-primary-content"></span></td> <td><span class="font-mono font-bold">primary-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on primary color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of primary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-primary-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--pc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-secondary"></span></td> <td><span class="font-mono font-bold">secondary</span> <br/> <span class="text-xs opacity-60">Secondary color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--s))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-secondary-focus"></span></td> <td><span class="font-mono font-bold">secondary-focus</span> <br/> <span class="text-xs opacity-60">Secondary color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of secondary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--sf))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-secondary-content"></span></td> <td><span class="font-mono font-bold">secondary-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on secondary color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of secondary if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-secondary-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--sc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-accent"></span></td> <td><span class="font-mono font-bold">accent</span> <br/> <span class="text-xs opacity-60">Accent color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--a))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-accent-focus"></span></td> <td><span class="font-mono font-bold">accent-focus</span> <br/> <span class="text-xs opacity-60">Accent color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of accent if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--af))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-accent-content"></span></td> <td><span class="font-mono font-bold">accent-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on accent color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of accent if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-accent-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--ac))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-neutral"></span></td> <td><span class="font-mono font-bold">neutral</span> <br/> <span class="text-xs opacity-60">Neutral color</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--n))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-neutral-focus"></span></td> <td><span class="font-mono font-bold">neutral-focus</span> <br/> <span class="text-xs opacity-60">Neutral color when focused</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of neutral if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral-focus</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--nf))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-neutral-content"></span></td> <td><span class="font-mono font-bold">neutral-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on neutral color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of neutral if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-neutral-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--nc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-base-100"></span></td> <td><span class="font-mono font-bold">base-100</span> <br/> <span class="text-xs opacity-60">Base color of page, used for blank backgrounds</span></td> <td><span class="badge badge-sm">required</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-100</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--b1))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-base-200"></span></td> <td><span class="font-mono font-bold">base-200</span> <br/> <span class="text-xs opacity-60">Base color, a little darker</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of base-100 if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-200</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--b2))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-base-300"></span></td> <td><span class="font-mono font-bold">base-300</span> <br/> <span class="text-xs opacity-60">Base color, even more darker</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a darker tone of base-200 if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-300</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--b3))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-base-content"></span></td> <td><span class="font-mono font-bold">base-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on base color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of base-100 if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-base-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--bc))</code></span></td></tr> <tr><td></td> <td></td> <td></td> <td></td></tr> <tr><td><span class="badge relative top-4 bg-info"></span></td> <td><span class="font-mono font-bold">info</span> <br/> <span class="text-xs opacity-60">Info color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default blue color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-info</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--in))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-info-content"></span></td> <td><span class="font-mono font-bold">info-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on info color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of info if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-info-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--inc))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-success"></span></td> <td><span class="font-mono font-bold">success</span> <br/> <span class="text-xs opacity-60">Success color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default green color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-success</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--su))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-success-content"></span></td> <td><span class="font-mono font-bold">success-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on success color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of success if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-success-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--suc))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-warning"></span></td> <td><span class="font-mono font-bold">warning</span> <br/> <span class="text-xs opacity-60">Warning color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default orange color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-warning</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--wa))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-warning-content"></span></td> <td><span class="font-mono font-bold">warning-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on warning color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of warning if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-warning-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--wac))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-error"></span></td> <td><span class="font-mono font-bold">error</span> <br/> <span class="text-xs opacity-60">Error color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a default red color if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-error</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--er))</code></span></td></tr> <tr><td><span class="badge relative top-4 bg-error-content"></span></td> <td><span class="font-mono font-bold">error-content</span> <br/> <span class="text-xs opacity-60">Foreground content color to use on error color</span></td> <td><span class="badge badge-sm badge-ghost">optional</span> <br/> <span class="text-xs opacity-60">Will be a readable tone of error if not specified</span></td> <td><span class="font-mono text-xs opacity-60">Class name: <code>bg-error-content</code></span> <br/> <span class="text-xs opacity-60 font-mono">CSS variable: <code>hsl(var(--erc))</code></span></td></tr>',xa,T,L,Ka='<span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span>',z,$a,G,ya,J,va,K,ct='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Button<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span></code>',ha,Q,ka,X,rt='<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox checkbox-secondary<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code>',_a,Z,Ca,aa,Sa,ta,dt=`<code class="language-css"><span class="token selector">bg-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">to-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">via-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">from-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">text-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">ring-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">fill-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">caret-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">stroke-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">border-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">divide-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">accent-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">shadow-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">outline-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">decoration-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">placeholder-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span>
<span class="token selector">ring-offset-</span><span class="token punctuation">&#123;</span>COLOR_NAME<span class="token punctuation">&#125;</span></code>`,wa,sa,Ea;return _=new y({props:{text:"Introduction"}}),S=new y({props:{text:"daisyUI is fully themeable and colorable,"}}),A=new y({props:{text:"So instead of using constant color utility classes like:"}}),R=new y({props:{text:"It's suggested to use semantic color utility classes like:"}}),W=new y({props:{text:"Each color name contains CSS variables and each daisyUI theme applies color values to the utility classes when it is applied."}}),q=new y({props:{text:"Benefits"}}),I=new y({props:{text:"Semantic color names make more sense because when we design interfaces, we don't just use any random color. We define a specific color palette with names like <code>primary</code>, <code>secondary</code>, etc. and we only use those specific colors in our interfaces."}}),F=new y({props:{text:"Also, using semantic color names makes theming easier. You wouldn't have to define dark-mode colors for every single element and you wouldn't be limited to only light/dark themes. you can have multiple themes available and each theme is just a few lines of CSS variables."}}),B=new y({props:{text:"List of all daisyUI color names"}}),U=new y({props:{text:"You can use these color names in your theme or in utility classes."}}),D=new y({props:{text:"Color name + description"}}),Y=new y({props:{text:"Required or optional for themes"}}),V=new y({props:{text:"Example use"}}),z=new y({props:{text:"How to use"}}),G=new y({props:{text:"Some daisyUI components come with modifier class names and that modifier class name will apply a color."}}),J=new y({props:{text:"For example"}}),Q=new y({props:{text:"Or"}}),Z=new y({props:{text:"You can also use color names in utility classes just like Tailwind's original color names."}}),aa=new y({props:{text:"These are utility classes that can be used with a color name:"}}),sa=new y({props:{text:"So you can use <code>bg-primary</code>, <code>border-secondary</code>, etc."}}),{c(){o=p("h2"),k=p("a"),k.innerHTML=O,f(_.$$.fragment),b=l(),n=p("div"),f(S.$$.fragment),Oa=l(),f(A.$$.fragment),Ma=l(),oa=p("ul"),oa.innerHTML=Ya,Ta=l(),f(R.$$.fragment),Ha=l(),pa=p("ul"),pa.innerHTML=Va,Aa=l(),f(W.$$.fragment),Ra=l(),N=p("h2"),w=p("a"),w.innerHTML=za,f(q.$$.fragment),Wa=l(),f(I.$$.fragment),Na=l(),f(F.$$.fragment),fa=l(),M=p("h2"),E=p("a"),E.innerHTML=Ga,f(B.$$.fragment),ma=l(),f(U.$$.fragment),ua=l(),j=p("div"),la=p("div"),P=p("table"),ra=p("thead"),C=p("tr"),ga=p("th"),qa=l(),da=p("th"),f(D.$$.fragment),Ia=l(),ia=p("th"),f(Y.$$.fragment),Fa=l(),ba=p("th"),f(V.$$.fragment),Ba=l(),ca=p("tbody"),ca.innerHTML=Ja,xa=l(),T=p("h2"),L=p("a"),L.innerHTML=Ka,f(z.$$.fragment),$a=l(),f(G.$$.fragment),ya=l(),f(J.$$.fragment),va=et(`:
`),K=p("pre"),ha=l(),f(Q.$$.fragment),ka=et(`:
`),X=p("pre"),_a=l(),f(Z.$$.fragment),Ca=l(),f(aa.$$.fragment),Sa=l(),ta=p("pre"),wa=l(),f(sa.$$.fragment),this.h()},l(a){o=c(a,"H2",{id:!0});var s=h(o);k=c(s,"A",{"aria-hidden":!0,tabindex:!0,href:!0,["data-svelte-h"]:!0}),na(k)!=="svelte-2t88z0"&&(k.innerHTML=O),m(_.$$.fragment,s),s.forEach(t),b=r(a),n=c(a,"DIV",{class:!0});var v=h(n);m(S.$$.fragment,v),Oa=r(v),m(A.$$.fragment,v),Ma=r(v),oa=c(v,"UL",{["data-svelte-h"]:!0}),na(oa)!=="svelte-1btn5tu"&&(oa.innerHTML=Ya),Ta=r(v),m(R.$$.fragment,v),Ha=r(v),pa=c(v,"UL",{["data-svelte-h"]:!0}),na(pa)!=="svelte-18ee2t6"&&(pa.innerHTML=Va),Aa=r(v),m(W.$$.fragment,v),Ra=r(v),N=c(v,"H2",{id:!0});var Ua=h(N);w=c(Ua,"A",{"aria-hidden":!0,tabindex:!0,href:!0,["data-svelte-h"]:!0}),na(w)!=="svelte-1trhte2"&&(w.innerHTML=za),m(q.$$.fragment,Ua),Ua.forEach(t),Wa=r(v),m(I.$$.fragment,v),Na=r(v),m(F.$$.fragment,v),v.forEach(t),fa=r(a),M=c(a,"H2",{id:!0});var ja=h(M);E=c(ja,"A",{"aria-hidden":!0,tabindex:!0,href:!0,["data-svelte-h"]:!0}),na(E)!=="svelte-les9x9"&&(E.innerHTML=Ga),m(B.$$.fragment,ja),ja.forEach(t),ma=r(a),m(U.$$.fragment,a),ua=r(a),j=c(a,"DIV",{class:!0});var Qa=h(j);la=c(Qa,"DIV",{class:!0});var Xa=h(la);P=c(Xa,"TABLE",{});var La=h(P);ra=c(La,"THEAD",{});var Za=h(ra);C=c(Za,"TR",{});var H=h(C);ga=c(H,"TH",{}),h(ga).forEach(t),qa=r(H),da=c(H,"TH",{});var at=h(da);m(D.$$.fragment,at),at.forEach(t),Ia=r(H),ia=c(H,"TH",{});var tt=h(ia);m(Y.$$.fragment,tt),tt.forEach(t),Fa=r(H),ba=c(H,"TH",{});var st=h(ba);m(V.$$.fragment,st),st.forEach(t),H.forEach(t),Za.forEach(t),Ba=r(La),ca=c(La,"TBODY",{["data-svelte-h"]:!0}),na(ca)!=="svelte-jy68tf"&&(ca.innerHTML=Ja),La.forEach(t),Xa.forEach(t),Qa.forEach(t),xa=r(a),T=c(a,"H2",{id:!0});var Pa=h(T);L=c(Pa,"A",{"aria-hidden":!0,tabindex:!0,href:!0,["data-svelte-h"]:!0}),na(L)!=="svelte-10vq208"&&(L.innerHTML=Ka),m(z.$$.fragment,Pa),Pa.forEach(t),$a=r(a),m(G.$$.fragment,a),ya=r(a),m(J.$$.fragment,a),va=ot(a,`:
`),K=c(a,"PRE",{class:!0});var it=h(K);it.forEach(t),ha=r(a),m(Q.$$.fragment,a),ka=ot(a,`:
`),X=c(a,"PRE",{class:!0});var bt=h(X);bt.forEach(t),_a=r(a),m(Z.$$.fragment,a),Ca=r(a),m(aa.$$.fragment,a),Sa=r(a),ta=c(a,"PRE",{class:!0});var ft=h(ta);ft.forEach(t),wa=r(a),m(sa.$$.fragment,a),this.h()},h(){d(k,"aria-hidden","true"),d(k,"tabindex","-1"),d(k,"href","#"),d(o,"id",""),d(w,"aria-hidden","true"),d(w,"tabindex","-1"),d(w,"href","#-1"),d(N,"id","-1"),d(n,"class","max-w-3xl"),d(E,"aria-hidden","true"),d(E,"tabindex","-1"),d(E,"href","#-2"),d(M,"id","-2"),d(la,"class","whitespace-nowrap"),d(j,"class","overflow-x-auto"),d(L,"aria-hidden","true"),d(L,"tabindex","-1"),d(L,"href","#-3"),d(T,"id","-3"),d(K,"class","language-html"),d(X,"class","language-html"),d(ta,"class","language-css")},m(a,s){i(a,o,s),e(o,k),u(_,o,null),i(a,b,s),i(a,n,s),u(S,n,null),e(n,Oa),u(A,n,null),e(n,Ma),e(n,oa),e(n,Ta),u(R,n,null),e(n,Ha),e(n,pa),e(n,Aa),u(W,n,null),e(n,Ra),e(n,N),e(N,w),u(q,N,null),e(n,Wa),u(I,n,null),e(n,Na),u(F,n,null),i(a,fa,s),i(a,M,s),e(M,E),u(B,M,null),i(a,ma,s),u(U,a,s),i(a,ua,s),i(a,j,s),e(j,la),e(la,P),e(P,ra),e(ra,C),e(C,ga),e(C,qa),e(C,da),u(D,da,null),e(C,Ia),e(C,ia),u(Y,ia,null),e(C,Fa),e(C,ba),u(V,ba,null),e(P,Ba),e(P,ca),i(a,xa,s),i(a,T,s),e(T,L),u(z,T,null),i(a,$a,s),u(G,a,s),i(a,ya,s),u(J,a,s),i(a,va,s),i(a,K,s),K.innerHTML=ct,i(a,ha,s),u(Q,a,s),i(a,ka,s),i(a,X,s),X.innerHTML=rt,i(a,_a,s),u(Z,a,s),i(a,Ca,s),u(aa,a,s),i(a,Sa,s),i(a,ta,s),ta.innerHTML=dt,i(a,wa,s),u(sa,a,s),Ea=!0},p:ut,i(a){Ea||(g(_.$$.fragment,a),g(S.$$.fragment,a),g(A.$$.fragment,a),g(R.$$.fragment,a),g(W.$$.fragment,a),g(q.$$.fragment,a),g(I.$$.fragment,a),g(F.$$.fragment,a),g(B.$$.fragment,a),g(U.$$.fragment,a),g(D.$$.fragment,a),g(Y.$$.fragment,a),g(V.$$.fragment,a),g(z.$$.fragment,a),g(G.$$.fragment,a),g(J.$$.fragment,a),g(Q.$$.fragment,a),g(Z.$$.fragment,a),g(aa.$$.fragment,a),g(sa.$$.fragment,a),Ea=!0)},o(a){x(_.$$.fragment,a),x(S.$$.fragment,a),x(A.$$.fragment,a),x(R.$$.fragment,a),x(W.$$.fragment,a),x(q.$$.fragment,a),x(I.$$.fragment,a),x(F.$$.fragment,a),x(B.$$.fragment,a),x(U.$$.fragment,a),x(D.$$.fragment,a),x(Y.$$.fragment,a),x(V.$$.fragment,a),x(z.$$.fragment,a),x(G.$$.fragment,a),x(J.$$.fragment,a),x(Q.$$.fragment,a),x(Z.$$.fragment,a),x(aa.$$.fragment,a),x(sa.$$.fragment,a),Ea=!1},d(a){a&&(t(o),t(b),t(n),t(fa),t(M),t(ma),t(ua),t(j),t(xa),t(T),t($a),t(ya),t(va),t(K),t(ha),t(ka),t(X),t(_a),t(Ca),t(Sa),t(ta),t(wa)),$(_),$(S),$(A),$(R),$(W),$(q),$(I),$(F),$(B),$(U,a),$(D),$(Y),$(V),$(z),$(G,a),$(J,a),$(Q,a),$(Z,a),$(aa,a),$(sa,a)}}}function ht(ea){let o,k;const O=[ea[0],lt];let _={$$slots:{default:[vt]},$$scope:{ctx:ea}};for(let b=0;b<O.length;b+=1)_=Da(_,O[b]);return o=new yt({props:_}),{c(){f(o.$$.fragment)},l(b){m(o.$$.fragment,b)},m(b,n){u(o,b,n),k=!0},p(b,[n]){const S=n&1?$t(O,[n&1&&pt(b[0]),n&0&&pt(lt)]):{};n&2&&(S.$$scope={dirty:n,ctx:b}),o.$set(S)},i(b){k||(g(o.$$.fragment,b),k=!0)},o(b){x(o.$$.fragment,b),k=!1},d(b){$(o,b)}}}const lt={title:"Colors",desc:"How to use daisyUI colors?",published:!0};function kt(ea,o,k){return ea.$$set=O=>{k(0,o=Da(Da({},o),nt(O)))},o=nt(o),[o]}class Lt extends gt{constructor(o){super(),xt(this,o,kt,ht,mt,{})}}export{Lt as component};
