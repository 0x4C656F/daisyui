import { c as create_ssr_component, v as validate_component } from "../../../../../chunks/ssr.js";
import { M as Mdsvex_blog } from "../../../../../chunks/mdsvex-blog.js";
const metadata = {
  "title": "The most common mistake when using Tailwind CSS (and how to fix it)",
  "desc": "While working on daisyUI, I see a lot of people making this mistake when using Tailwind CSS.",
  "published": true,
  "date": "2023-9-14",
  "author": "Pouya Saadeghi",
  "thumbnail": "/images/blog/tailwind-mistake.jpg",
  "tags": ["Tailwind CSS"]
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex_blog, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign({}, $$props, metadata), {}, {
    default: () => {
      return `<p data-svelte-h="svelte-yzmz4q">As a maintainer of daisyUI, I help people on GitHub issues and GitHub discussions every day. I see a lot of people making this mistake when using Tailwind CSS. Itâ€™s so simple to avoid but I find it so common among developers.</p> <h2 id="the-mistake" data-svelte-h="svelte-rj83vs"><a aria-hidden="true" tabindex="-1" href="#the-mistake"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>The mistake</h2> <p data-svelte-h="svelte-4rrmzq">Hereâ€™s how we simply use Tailwind CSS class names in HTML:</p> <pre class="language-html"><!-- HTML_TAG_START -->${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-red-500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-green-500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-blue-500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-17p33r5">However it would be cool if we do some totally necessary engineering and make it more dynamic. So we do something like this:</p> <pre class="language-html"><!-- HTML_TAG_START -->${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bg-&#123;&#123; color &#125;&#125;-500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-bgu96b">You might even want to do the same thing with daisyUI class names:</p> <pre class="language-html"><!-- HTML_TAG_START -->${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-&#123;&#123; type &#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
instead of
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-primary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-xhe7w5">Itâ€™s cool, right?<br>
It even works in dev environment.</p> <p data-svelte-h="svelte-1s61m74">Everything is fineâ€¦<br>
ðŸ˜  until we build our app for production and you realize the color is not working anymore</p> <h2 id="why-it-doesnt-work" data-svelte-h="svelte-1wdb9ue"><a aria-hidden="true" tabindex="-1" href="#why-it-doesnt-work"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>Why it doesnâ€™t work?</h2> <p data-svelte-h="svelte-jhm2t7">Tailwind CSS scans your HTML files and looks for class names. Then it generates a CSS file based on the class names it finds. Itâ€™s that simple. Because the string <code>bg-red-500</code> does not exist in <code>bg-{{ color }}-500</code>, it simply wonâ€™t generate the CSS for it.</p> <p data-svelte-h="svelte-x81zpd">Read more about <a href="https://tailwindcss.com/docs/content-configuration#dynamic-class-names" rel="nofollow">using dynamic class names with Tailwind CSS</a>.</p> <h2 id="but-it-was-working-in-dev-environment" data-svelte-h="svelte-6itatr"><a aria-hidden="true" tabindex="-1" href="#but-it-was-working-in-dev-environment"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>But it was working in dev environment!</h2> <p data-svelte-h="svelte-j8rp8m">Yes, it was working because you probably first had <code>bg-red-500</code> in your file, you saved the file and <code>.bg-red-500</code> class name got added to your CSS. Then you changed it to <code>bg-{{ color }}-500</code> and saved the file again. <code>bg-red-500</code> is not in your HTML anymore, but itâ€™s still in your CSS file. So it works in dev environment, but not in production.</p> <h2 id="but-some-class-names-work-and-some-dont" data-svelte-h="svelte-iqtj8t"><a aria-hidden="true" tabindex="-1" href="#but-some-class-names-work-and-some-dont"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>But some class names work and some donâ€™t!</h2> <p data-svelte-h="svelte-1s3cqs0">Probably because you used those class names the correct way (as a string like <code>bg-red-500</code>) in another file.</p> <h2 id="solutions" data-svelte-h="svelte-h4gcd9"><a aria-hidden="true" tabindex="-1" href="#solutions"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>Solutions</h2> <p data-svelte-h="svelte-15d1eoe">How to fix it?</p> <p data-svelte-h="svelte-1e8dqsk">Simply <strong>do not</strong> use dynamic class names like <code>bg-{{ color }}-500</code>. Make sure the whole class name as a string exists in your file.</p> <pre class="language-jsx"><!-- HTML_TAG_START -->${`<code class="language-jsx"><span class="token keyword">let</span> color <span class="token operator">=</span> <span class="token string">'bg-red-500'</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;&#123; color &#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1swgvyi">If you really have to do that, You have 3 ways:</p> <h3 id="solution-1-add-the-class-names-somewhere-in-the-file" data-svelte-h="svelte-wahsyq"><a aria-hidden="true" tabindex="-1" href="#solution-1-add-the-class-names-somewhere-in-the-file"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>Solution 1: Add the class names somewhere in the file</h3> <p data-svelte-h="svelte-1541mpe">Map the required class names somewhere in your file. It can be an object, a comment or anything.</p> <h3 id="solution-2-a-safelist-file" data-svelte-h="svelte-wppag8"><a aria-hidden="true" tabindex="-1" href="#solution-2-a-safelist-file"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>Solution 2: A safelist file</h3> <p data-svelte-h="svelte-1foywbp">List all the required class names in a safelist file and add it to your <code>tailwind.config.js</code> file as <code>content</code></p> <pre class="language-js"><!-- HTML_TAG_START -->${`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"./path/safelist.txt"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-2n6eu1"><code>./path/safelist.txt</code> file can be simply like this:</p> <pre class="language-txt"><!-- HTML_TAG_START -->${`<code class="language-txt">bg-red-500
bg-green-500
bg-blue-500</code>`}<!-- HTML_TAG_END --></pre> <h3 id="solution-3-safelist-config" data-svelte-h="svelte-xv5fk4"><a aria-hidden="true" tabindex="-1" href="#solution-3-safelist-config"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>Solution 3: Safelist config</h3> <p data-svelte-h="svelte-1db0yfa">Safelist all the required class names in your <code>tailwind.config.js</code> file.</p> <pre class="language-js"><!-- HTML_TAG_START -->${`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"./pages/**/*.&#123;html,js&#125;"</span><span class="token punctuation">,</span> <span class="token string">"./components/**/*.&#123;html,js&#125;"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">safelist</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"bg-red-500"</span><span class="token punctuation">,</span> <span class="token string">"bg-green-500"</span><span class="token punctuation">,</span> <span class="token string">"bg-blue-500"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-3gcz5l">You can also use regex patterns in safelist:</p> <pre class="language-js"><!-- HTML_TAG_START -->${`<code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"./pages/**/*.&#123;html,js&#125;"</span><span class="token punctuation">,</span> <span class="token string">"./components/**/*.&#123;html,js&#125;"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
  <span class="token literal-property property">safelist</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">"bg-teal-700"</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#123;</span>
      <span class="token literal-property property">pattern</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">bg-(red|green|blue)-(400|500|600)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-ljnn5w">Read more about <a href="https://tailwindcss.com/docs/content-configuration#safelisting-classes" rel="nofollow">Tailwind CSS safelist</a>.</p>`;
    }
  })}`;
});
export {
  Page as default,
  metadata
};
