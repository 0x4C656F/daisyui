import { c as create_ssr_component, v as validate_component } from "../../../../../chunks/ssr.js";
import { M as Mdsvex_blog } from "../../../../../chunks/mdsvex-blog.js";
const metadata = {
  "title": "Mary UI: Laravel blade components made with daisyUI",
  "desc": "Mary UI is a collection of Laravel blade components made for Livewire 3 and styled around daisyUI and Tailwind CSS",
  "published": true,
  "date": "2023-9-13",
  "author": "Pouya Saadeghi",
  "thumbnail": "/images/blog/mary-ui.jpg",
  "tags": ["Laravel"]
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  return `${validate_component(Mdsvex_blog, "Layout_MDSVEX_DEFAULT").$$render($$result, Object.assign({}, $$props, metadata), {}, {
    default: () => {
      return `<h2 id="what-is-mary-ui" data-svelte-h="svelte-zuwr9f"><a aria-hidden="true" tabindex="-1" href="#what-is-mary-ui"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>What is Mary UI?</h2> <p data-svelte-h="svelte-5tilz8"><a href="https://mary-ui.com/" rel="nofollow">Mary UI</a> is a collection of Laravel blade components made for Livewire 3.<br>
These components are built on top of <a href="https://daisyui.com/" rel="nofollow">daisyUI</a> and <a href="https://tailwindcss.com/" rel="nofollow">Tailwind CSS</a>.<br>
If you’re a Laravel developer and you’re using Livewire, you’ll love Mary UI because it makes it faster and easier to build web pages.</p> <p data-svelte-h="svelte-1cji1ok">Mary UI does not ship any custom CSS and relies on daisyUI and Tailwind for out-of-box styling. You can customize most of components styles, by inline overriding daisyUI and Tailwind CSS classes.</p> <h2 id="how-does-it-look-like" data-svelte-h="svelte-b1w8ye"><a aria-hidden="true" tabindex="-1" href="#how-does-it-look-like"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>How does it look like?</h2> <p data-svelte-h="svelte-4x9zsw">Mary UI allows you to use daisyUI components in your Laravel blade files using Livewire syntax.</p> <p data-svelte-h="svelte-ag9r89">To make a form like this:
<img src="/images/blog/mary-ui-form.jpg" alt="Mary UI form">
All you need would be these few lines:</p> <pre class="language-html"><!-- HTML_TAG_START -->${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-form</span> <span class="token attr-name"><span class="token namespace">wire:</span>submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-input</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Name<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">wire:</span>model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-input</span>
    <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Amount<span class="token punctuation">"</span></span>
    <span class="token attr-name"><span class="token namespace">wire:</span>model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>amount<span class="token punctuation">"</span></span>
    <span class="token attr-name">prefix</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>USD<span class="token punctuation">"</span></span>
    <span class="token attr-name">money</span>
    <span class="token attr-name">hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>It submits an unmasked value<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">x-slot:</span>actions</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-button</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Cancel<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>x-button</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Click me!<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">spinner</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>save<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">x-slot:</span>actions</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>x-form</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre> <h2 id="how-to-install-mary-ui-on-a-new-laravel-project" data-svelte-h="svelte-ybx79f"><a aria-hidden="true" tabindex="-1" href="#how-to-install-mary-ui-on-a-new-laravel-project"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>How to install Mary UI on a new Laravel project?</h2> <p data-svelte-h="svelte-k04kk9">You can install Mary UI using composer:</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash"><span class="token function">composer</span> require robsontenorio/mary</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1swsank">If it’s a new Laravel project, you can complete the setup by running the following command:</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash">php artisan mary:install</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-l9h07o">And start the dev server</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash"><span class="token function">yarn</span> dev</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-65jiqx">Read more about <a href="https://mary-ui.com/docs/installation" rel="nofollow">Mary UI installation</a>.</p> <h2 id="how-to-install-mary-ui-on-existing-laravel-project" data-svelte-h="svelte-15akkbv"><a aria-hidden="true" tabindex="-1" href="#how-to-install-mary-ui-on-existing-laravel-project"><span class="mr-1 opacity-20 hover:opacity-60 text-base font-bold inline-block align-middle relative -mt-1">#</span></a>How to install Mary UI on existing Laravel project?</h2> <p data-svelte-h="svelte-zkwnn8">Install Mary UI using composer:</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash"><span class="token function">composer</span> require robsontenorio/mary</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-k94tif">If it’s an existing Laravel project, Install daisyUI and Tailwind CSS and initialize Tailwind CSS config file:</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash"><span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> tailwindcss daisyui@latest postcss autoprefixer <span class="token operator">&amp;&amp;</span> npx tailwindcss init <span class="token parameter variable">-p</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1299s35">Change your tailwind.config.js file like this:</p> <pre class="language-js"><!-- HTML_TAG_START -->${`<code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>
  <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// You will probably also need those lines</span>
    <span class="token string">"./resources/**/**/*.&#123;js,blade.php&#125;"</span><span class="token punctuation">,</span>
    <span class="token string">"./app/View/Components/**/**/*.php"</span><span class="token punctuation">,</span>
    <span class="token string">"./app/Livewire/**/**/*.php"</span><span class="token punctuation">,</span>

    <span class="token comment">// Add mary</span>
    <span class="token string">"./vendor/robsontenorio/mary/src/View/Components/**/*.php"</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>

  <span class="token comment">// Add daisyUI</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"daisyui"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1fjemzl">Add Tailwind directives to <code>resources/css/app.css</code></p> <pre class="language-pcss"><!-- HTML_TAG_START -->${`<code class="language-pcss">@tailwind base;
@tailwind components;
@tailwind utilities;</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1fy2lue">Setup Livewire default app template.</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash"><span class="token comment"># It creates &#96;views/components/layouts/app.blade.php&#96;</span>
php artisan livewire:layout</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-fbcjn4">Then add <code>@vite</code> on default app template <code>views/components/layouts/app.blade.php</code></p> <pre class="language-html"><!-- HTML_TAG_START -->${`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
  ...
  <span class="token comment">&lt;!-- This --></span>
  @vite(['resources/css/app.css', 'resources/js/app.js'])
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
  ...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1q4lepj">Finally, start dev server.</p> <pre class="language-bash"><!-- HTML_TAG_START -->${`<code class="language-bash"><span class="token function">yarn</span> dev</code>`}<!-- HTML_TAG_END --></pre> <p data-svelte-h="svelte-1e6m7wx">That’s it! You can now use Mary UI components in your blade files.</p> <p data-svelte-h="svelte-142a07s">Read more about <a href="https://mary-ui.com" rel="nofollow">Mary UI</a>.</p>`;
    }
  })}`;
});
export {
  Page as default,
  metadata
};
